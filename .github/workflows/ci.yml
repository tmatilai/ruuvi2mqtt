name: CI

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup | Rust
        uses: dtolnay/rust-toolchain@888c2e1ea69ab0d4330cbf0af1ecc7b68f368cc1
        with:
          toolchain: stable
          components: rustfmt

      - name: Run fmt
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup | Rust
        uses: dtolnay/rust-toolchain@888c2e1ea69ab0d4330cbf0af1ecc7b68f368cc1
        with:
          toolchain: stable
          components: clippy

      - name: Setup | Cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8

      - name: Run clippy
        run: cargo clippy --locked --tests --all-targets --all-features -- -D clippy::all -W clippy::pedantic

  test:
    name: Test
    permissions:
      contents: read
      packages: read
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-musleabihf
          - x86_64-unknown-linux-musl
        os: [ubuntu-latest]
        include:
          # Use an older Ubuntu version for glibc compatibility with Debian v11 Buster
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-20.04
    env:
      USE_CROSS: "${{ !startsWith(matrix.target, 'x86_64-unknown-linux-') }}"
      MUSL: ${{ contains(matrix.target, '-unknown-linux-musl') }}
      CARGO: cargo
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup | Rust
        uses: dtolnay/rust-toolchain@888c2e1ea69ab0d4330cbf0af1ecc7b68f368cc1
        with:
          toolchain: stable

      - name: Setup | Cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
        with:
          shared-key: ${{ matrix.target }}-${{ matrix.os }}-debug-build

      - name: Setup | Cross
        if: env.USE_CROSS == 'true'
        run: |
          cargo install --bins cross
          echo "CARGO=cross" >> $GITHUB_ENV

      - name: Setup | Install build dependencies
        if: env.USE_CROSS == 'false'
        run: |
          rustup target add ${{ matrix.target }}
          if [[ "$MUSL" == 'true' ]]; then
            sudo apt-get update
            sudo apt-get install --assume-yes musl-tools
          fi

      - name: Setup | Log in to the Container registry
        if: env.USE_CROSS == 'true'
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run check
        run: ${{ env.CARGO }} check --target ${{ matrix.target }}

      - name: Run tests
        # Disable on cross until find a way to use trycmd with it:
        # https://github.com/assert-rs/trycmd/issues/51
        if: env.USE_CROSS == 'false'
        run: ${{ env.CARGO }} test --verbose --target ${{ matrix.target }}
